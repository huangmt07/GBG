from difflib import SequenceMatcher, get_close_matches
import sys


class PhoneNOGenerator():
    #phone = ['33277777', '23700789', '27785577', 'nan', '27786878', '87256509', '27786878', '0952756578', '23615858', 'nan', '23615858', 'nan', '23615858', 'nan', '23615858', 'nan', '23146871', '33936636', '02-27259988', '27033366', '23932898', 'nan', '23716000', 'nan', '23716000', 'nan', '23716000', 'nan', '25939888', '27878000', '25939888', '27208889', '25583645', 'nan', '23716000', 'nan', '26577732', '0939909302', '25517559', '0927962936', '02-27000898', 'nan', '81011000', '33931388', '81011000', '22228291', '81011000', '25931818', '81616800', '0919463688', '0', 'nan', '25312868', '87898332', '0', 'nan', '25152001', 'nan', '87895599', '0929731053', '87895599', '0911507439', '0975636716', '0925418817', '0975636716', '0917019342', '0975636716', '0933169339', '0975636716', '0961154267', '0975636716', '0976511541', '0975636716', '0989086880', '0975636716', '0911593136', '0975636716', '0920029613', '87917778', '27000898', '02-35187600', '87526388', '0', '0988323845', '27328899', '0931534509', '27328899', '0930261991', '27328899', '0960518417']
    phone=[]
    def loadfile(self):
        global phone
        #f = open("phone.txt","r")
        f = open("phone2.txt","r")
        str_phone = f.read()
        phone = str_phone.split(",")
        #phone = ['33277777', '23700789', '27785577', 'nan', '27786878', '87256509', '27786878', '0952756578', '23615858', 'nan', '23615858', 'nan', '23615858', 'nan', '23615858', 'nan', '23146871', '33936636', '02-27259988', '27033366', '23932898', 'nan', '23716000', 'nan', '23716000', 'nan', '23716000', 'nan', '25939888', '27878000', '25939888', '27208889', '25583645', 'nan', '23716000', 'nan', '26577732', '0939909302', '25517559', '0927962936', '02-27000898', 'nan', '81011000', '33931388', '81011000', '22228291', '81011000', '25931818', '81616800', '0919463688', '0', 'nan', '25312868', '87898332', '0', 'nan', '25152001', 'nan', '87895599', '0929731053', '87895599', '0911507439', '0975636716', '0925418817', '0975636716', '0917019342', '0975636716', '0933169339', '0975636716', '0961154267', '0975636716', '0976511541', '0975636716', '0989086880', '0975636716', '0911593136', '0975636716', '0920029613', '87917778', '27000898', '02-35187600', '87526388', '0', '0988323845', '27328899', '0931534509', '27328899', '0930261991', '27328899', '0960518417']
        print(phone)
        f.close()
    def search_myphton(self):
         myphone = input('請輸入您到號碼：');
         global phone
         seq = SequenceMatcher(myphone)#a,b 帶入參數
         match = get_close_matches(myphone,phone,n=10,cutoff=0.3)
         print(match)
        #  if(len(match)>=1):
        #     print('+-----------------+')
        #     for m in match:
        #         print('|    '+(m)+'   |')
        #         print('+=================+')
        #  else: print("未匹配成功")
         
        #  if(myphone=='quit'):
        #     sys.exit();
     
if __name__ =='__main__':
    pg = PhoneNOGenerator()
    pg.loadfile()
    while(1):
        pg.search_myphton()
